<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABSEgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgDAAAAa6xYVAAAAwBQ
        TFRFKTd+KDd+KTd/LDqBLDl/KDZ/Kjh+Kzl/JjR+HSt4Gih1HCt3JDN9Kjh/KzmANUGCZG2fdn+tZnCh
        Qk6HIjB5HSx3IzF5h42x7e3w///+/////v7+9vb2yMvYb3ijIS93parB/f3+t7rNLzx+JjR9KjiAanKe
        /P39/f39+/v8JDJ5u73P/Pz8+fn7e4KozM7c3N7lNEF/JzV/Kjd+JTN6vsHSubzO/Pz9lJm2Hix4LDqA
        IzF8XGaW2dvkbHWiHy55LzyCIi94KDV6MD5/Kjd7z9HdeYClHCp3IC54IC56FSRzgIeqYGqcGCh1JzV9
        JjN+hIyw0dLe3t/mlpy7pKrH9/f2foWuM0CFQk2NPkuLO0aEztDb5ufs1tjf2dri3Nzjzs/WOUWA2drj
        +vr8+fr7+Pj5fYWrPUmCS1WLSFSLRVCKLDp+IC52tLfLbXaoIjB7Gyp2dX2k6eruoajFkJe1iY+wjpOz
        j5W0kpe2k5m4mZ++n6TASFSQrrPGFSRvGyl0Gyp1Hix2jpW2P0uG1tjhRE+HIC96IjF7Hi13Hy14Zm+c
        cXmkPUiFUFqQWWSWUFqMZnCkZW+iYGueSVSQMz9/wMPT4OHq8PHzqq7GTlmOXWeboqjC1tnj7u7y+vr5
        ZG2b8PDyXWaVLzt8Z3Cf09TgM0CCi5Kz4+TqzM/aqq/IR1ONhIyu3d/oOkWDpKjBGCZzV2GWxcjXmZ27
        LDl8TFeNJjN5sbXK+/v79PT1P0qFqKzDQUyJV2CTYWqbNkOCnaO+vL/Q7+/xu7/S3uDnhoyve4OseoOs
        x8nWtLjNcHmngIiwaXKiVV6RDhxtGil1cnujR1KK8fL0pKnDwcXXY2uaDR1v4ePp6+zvdX6nrLHJbnah
        XWaY1Nfhoqe/lp24NkKBRU+JP0uKRE+J8/P2wsXTTFiRbHafWWOahIutTFeO3N3lU12RcnumhYyzcHig
        qq/Eur3RnaG8YGiYd3+mmaC7Dx1uOESFRFCOjJOwSlaNPUqHeYKpxMjYYWuZeYOvW2aZCYqHAgAAAAFv
        ck5UAc+id5oAAA8ASURBVHja7Zx9nBPlncCTmUyycTMDtmRlfs/COuwOydKsYrIw7gTJLqwuK7Jb5eBa
        pVpllxaBy+r5Ug8oWV+SXQrUO6QFraCUFlHR2pWXolLfWr2eXYtnsb6grWBPpddXT0/bu/aZTJLJq8m0
        Hftp+H0//iG7m3nm+c3v/flNbDYEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
        QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEqRw7o3PCCkDbPMs6TlwBcE5XjfukWg8vnLAaUDtm7Mkf+/g4
        L+M8EffvtNedMl4EUj9hYl2NYGO4E00AQsOpIBGJAIFJjU3yCecNXd7J4CNA8TfDpCknngD4KZ+AgAhJ
        CbTAabXsiecETge/LgCQYOoZQaaYm6zi7Ydap6VMICmB6XWhgt3yVW0WrinTQUlpADTDmW1qwWaFKt4+
        rwrhGWeBP6MBMyPtah5sh00VXK6q3D8rR2bN7pwOPt0JwtnnzO6a05ZL97lzz5vX09vEhaovA2TDnZ88
        /fwLtBSAIvrhrPn/UIQFC//xU5/+tMtefSnQuAsv0vYu6T5QJGLaF+Sx6DMXX/LZS2uqLVHmPWdcBs1K
        wJ/ZuEgURfJp+JXFi/v6+hZr9MOSz31+6eXLqi5HlpevgGYRtN0nBaD/b4osXVDgn87tjUarzgLUgSsg
        UFzlqV1c+c9XXX3NtVd94br58/9l5SqP4Ky6QtEZnD01E/7yUWD1F71rNGKDscGBVqbqIgBVgNiStPcr
        JoDr3Xo+wLKsyspc1dk/z3CdnwE/KWkBN3iquyqU2dqJ1ABKhD0Jbuzk/k4EEOJdvI6rDNleLCTLrReB
        Qko8fwItN3n4UPHlTGC5H1MFW1M0nkgkotFEfKg4wyna6gwJhHqY6NrSHoBQFfiSu7AEcqi2psTwUKV4
        uy3MYul/vCNYOxRat37Dl5NsuPlfizL233Q+trGVsel74oO3bPrKV4GIWSYgkszup7aICmweZJmcdoCT
        DXoHey7ccmuJdQq5+VYLQyfHsL2x2TNv+9rt9X0LNOq3lnicNLvRIOLaSKrtzbFD2+gzznn+9Pd+RcsI
        Cdxx5+1QP/WaVtkQN3WZQk3X9q+v3HF7fanUoUgk2TwoWLZ9me/6xjd3ipXeDPV3d7XKfLoGGtwFAZIr
        AKD/Jn5R7INJDXMn3u2KM0Z7mON4oavxnnsrXy6pSeKWuFVegOPlORN30nv2ESAV3Y0Cp3WpqdYW79m9
        iEokVwB++NrmPloZENjWFo0kbALDGT6Al91fvwCIpEipvVWADzZ1yFZs3m4LMa5g6310CZKuYcTyj2PR
        LZliTu2aSPWz4A923/+tB0Sy6OopsovXvAWTdjccz3V8mySThuRKpEINmNzlsOTpcwwfHJkGfYoJfVRg
        vjfT7hU6JhXkwFQAD8rhnvPOG9Mt5PtbmdmzFxYHwBQSXNzI8RZFAHnKCthHTNnj/qUJPlMFf2d8wVOk
        fn9JWzsfidSwTiY33NiEhgPQTMztn4r86lrVIgfA1l4D/T4zd+ODFVMyUU2oXQLNhU7yssagi21vb5eZ
        vLaRWjsX+hWT+6fB5KEaa1JJRo0/vI8QsXKXLEoKPBJR005dmLMafIUP7ArNSdrpH+UlgEL0wf3awYEp
        FSAtcMBr0RELrWImJE3Y39xSIYthequR1/HBg99tKbDYHZ1y0bSFEaY8mnSZZHFLxfT3wWNLwxY1EVXv
        TN2HV24EgcfHNGW5Nib4xU15n5ZgcpujuL51zwAt+BFzPmfnncMsZ40JyOM2aQpA4IknZ5688HsV8P1v
        1dW4smo7oemhPC/YDE9pp6JFG6dDT2vCInD+9/594Q8WVsh/zI4KFpWTrvgzW5N5u0jO+uT2H547elI5
        RudFGFf28R478Gx+HiDOMHxE7nKJH+1PCkv0TZjZ8MN5o5Ux0CRTW/3rd1HoFR1d96V9OIFDz93Ns2pZ
        chNSV++eCSDl6P9/Pm8v2Tg80xDWzlMOVrBa4Yp/VRfo2T0+ncVI0p8TbJ3BkUdz8yAFrv9xCY/t7Jl9
        OC0svwSBB6N/4xMyRu26On2ar6nACxf2ms221Np7YF9ODA3ArrYSYnTU/sRYzgfTG+S/8f5t3Ihxkkkf
        3Urz8wzMrB15vcBmeHGgxGX4PXcZ8YLA2ojDWYrQR6MA7pcy5ksk6N/SLZiUoBB5WcwLaX54ZXuQ54qc
        HQqRGcYfS3B+R/hDqBFkm9WDBAy/3LBf0QfTGkwe3XOcPO8+Q6lTkvTBkRhrsxdKy+E9AEo651Tg1dfu
        vrwoP6X8bNlot5ypIa3q5Ua39GciONWAyW6TAgj12F6nTjQ3j6ZRNfBM3FV4JSZIXWDWH7f0fwgLnrht
        fZvM8JYKgK09YgQlBc4a4UxK3N74wFGSe/KnJXkBOFZMl4ToG/VaZ6fS9K//+inWmgDfu/uxjAKIzfBk
        zGQMdHpuOGTkgERKD0dR+/55V6EflCP/RSovggiNk0eWWzpuq3a9aSgAgfHrPCbbrnzirXrDhLTJgIwf
        vHgkWHAxV/jyO8xUgaQZToupFgqA63wlOwbeN2h2MVfk5UwvkMCVj2zKSECCewbyr2ZnmM63c3LGcnW3
        nyYmHut64a7hbUCMJGjr8bj5JOgXmQ0p8OaPP/5CljgK9UkWar8AZlohVAXmWtUH0qJyxyfAJ2aU9pj5
        tEwd/e/UhkQJrjzIdZ2TjnKiAkdoUpXnw/jwuvHakiKp0BHSuxrH84w1+3cl3tpqeGQJXoqYlrUauy5d
        SdGo7mWFPcdSMxKiSBYcT8j5uYA6/EtRUbSzlUpboV9Zxlk0b84Igyvp3ZL0Sm9v5xizLRftEvtSKv/V
        18M89XKZsOKDTXVywZSoOvSmH5TmfQGlNCRbADtnBy0KhUzPbmqx6WeRrANNS5qvm5R64gH41aDA0cTi
        ipRNEOrBJrtVe2FD5JEdfhPN8Fd6QhYJQGvmSlnu9jse3qwR8bbGe/UwknShWu7HNqyGZpoKUrlKcPas
        wlsPqfFlY7/968d/XYrHJ91r5CYB+M2QZcdhzvMNAShwYMisB2A4B/faIf0afni0I5myyMFbLob+tFb9
        NlIkj3Ew8eHuOaVZPsGIzUScMWyRAFyR57NyOPA/bPrgMSTIy69NNTclcVvEodeX0S2PpX6owBJ3Mak6
        k3NCJWgPPy9mWcDps6wqBoTlk4yhNgWeqjMdA2XPyF66VVEfCp6lH4DwHBtet1d/hAo86S2qViEbUxTt
        x8KcFZlUgdanv3M7rPGAfHhpvxEDffCsu7wFMNn2zzDcnumwWJ+JyLpRxt5+/3X6Fvwwtk0wPmtEM6Z0
        lcuHf2rUpzQGnBG0JBFkGHb0HWOkR4KpjZzMlCNLBNqjir0q6q0w4oe3R4Kyvj/GFX9rX3ILEq0HuGyJ
        2cqvwLAD840GmwLXDVhzHMTIvWcsMtJgBa6JtAvlkHMEIETuFPVOmEh99SkDqaNC+ouh6Xpy5IMnjdu3
        86wslIflxiwyWlSwn+YWFmWBXacZM000b99+7kBszYdBfzss03ImfYWQXPdA6sUQGkMvaUxnK4zq/i11
        DCTZYV2XiaxOe9e8NaNryhAb9f7P74yOiQIrBq06D5QbphnvtdBb3fxiOXY9fW2PMeDKOCIva60NUcvr
        of6Zbkf63IrrpNFV+3EADsRYTrd/uan157terITNh+mnU8m0BC9HLHq7hq95d5G541mq0Gd6s+5GXq4f
        cWoRFH55f+ZBsYN6eqW9K3A8rn+A+svORytdLpMDER9cVOp87S+PAYn3SO7ITzmaYfxrHiNSyvFnxNQw
        jQL/a+zfybQeS8ZA0Sc+1SA7k/fPCF2vQnMgoFSCkZv4xW3DrEUdMdnzs6OmNIAE4FTq0TK3w8b26lkE
        rdhPjRk1D9/77u36hf3wklvVIx9fo3XeRFMzYdrpwupB2WbRWLnMjVyU38sto5j+9XEh0+l2RR/cqh9x
        BuDYLDufkYwruj6QioGXNNqZUPIDjoE304ZdaSuIUMU6/Fovb9VQeYiNfbdwrOXDJgJgWgdvhHS29oDm
        ATT7v2B2wpV99vkD/eSHRtZ0S8zJOW400whLOpAA3PH5NodF2082Q96vByKaKEsnZ1JFxiaEX9fPuGkR
        eVN39m2ysQNJwRI4+lA6hDvca80slTKsQw/Xspx1AmCE2qtMTGrRpG6ZUdlz7MBv9CkX6L/TnX2bIbvz
        7KQGKLA60xZ3dUzLPzsqs5oiwY3vu1krX6qg1lm3WXvDi0ikPP6+7KTOFvJ88ELyfEOBc0bVXOf6kJ7J
        E9ignzJSUcePi6RyAvSeoP6dkXGqPWTpoYgzOOudlgojgQR3jdiNnJQdvCoZ6prhzDU59T4nRNYmi3gF
        JuyRU/bCxp6rtBOcmhsdf+ANb9DaI7FkPSx0r79tx5VHy3Po8HNjmoxxP7nm4E5Ncoq4uoHNqdUYNraS
        GhbxL4aftKW6YbLnhkX1R/cfrYzxT5y+6xcfDHna5Y/gpTq+3TO07FMby7Pq4DAj2zMBmfV+U3PqClWL
        3C9JYXjOdbYWXSV4epbMpbLAnm9sXLVqY2Wseu/dnqF4sF3lP4KXqmiSprJcayJcjmi4Rs3+IgzBO51a
        gB+euDScV6rI4aWB5OshezuDfOoDdq4nmhgXLb8MJZEIN/Eq62JsH9kXDDgrelUntychRF4CnwT1X+7O
        ndxjONb7++SLEwsupTps+EyHo8JXghyuv4uX6ln3ElD8cK8zbwqYuoChvZq/88Ov7o83qaqtShH2TAC/
        Hy7TJhdzRMB7PtAHJkVx7yPvLo9X6f7VgWdBorXqHzx0/zmlimvcG6kS0Q/i4afHtvLVuH9nzy2HoS/Q
        ByvG5e9P6P4/0AcgiEIkeM5blUbg8M7Vkl0FjhS8wsW674F+PwRo3kv27zyyvacqv0nM2Xr3/59MWbix
        oF/JeN7bcPyPYzdsOO/mW99vbKup0m9S48PzTpp30ui8hKvIYUN3POLujni9wwlOkG1VilOfXy7m4YwX
        gfmQDUEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
        BEEQBEEQBEGQsvwJhq8CWnjFsW4AAAAASUVORK5CYII=
</value>
  </data>
</root>